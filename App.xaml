<Application x:Class="CounterPlg.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:local="clr-namespace:CounterPlg"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <local:TabToButtonStyleConverter x:Key="TabToButtonStyleConverter"/>
        <local:TabToVisibilityConverter x:Key="TabToVisibilityConverter"/>
        <local:MultiTabToVisibilityConverter x:Key="MultiTabToVisibilityConverter"/>

        <!-- Конвертер для видимості -->
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <!-- Градієнтні фони -->
        <LinearGradientBrush x:Key="MenuGradient" StartPoint="0.5, 0" EndPoint="0.5, 1">
            <GradientStop Color="#223266" Offset="0"/>
            <GradientStop Color="#27396d" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="AvatarGradient" StartPoint="0, 0" EndPoint="1, 2">
            <GradientStop Color="#7f7cf1" Offset="0"/>
            <GradientStop Color="#d3b7ff" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="WindowGradient" StartPoint="1, 0" EndPoint="0, 1">
            <GradientStop Color="#41518f" Offset="0"/>
            <GradientStop Color="#2c386c" Offset="1"/>
        </LinearGradientBrush>

        <!-- Background Resources -->
        <SolidColorBrush x:Key="DefaultBackground1" Color="#827bff"/>
        <SolidColorBrush x:Key="DefaultBackground2" Color="#d9b5ff"/>
        <SolidColorBrush x:Key="DefaultEllipseBackground1" Color="#b298fd"/>
        <SolidColorBrush x:Key="DefaultEllipseBackground2" Color="#e4bbff"/>

        <!-- Базовий стиль для кнопок -->
        <Style x:Key="BaseButtonStyle" TargetType="Button">
            <Setter Property="Height" Value="45"/>
            <Setter Property="Margin" Value="15 3"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="8">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" Margin="55 0 0 0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Menu Button Style -->
        <Style x:Key="menuButton" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#8294cc"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2b3a7a"/>
                    <Setter Property="Foreground" Value="#ccd7ff"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Active Menu Button Style -->
        <Style x:Key="menuButtonActive" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Background" Value="#2b3a7a"/>
            <Setter Property="Foreground" Value="#ccd7ff"/>
        </Style>

        <!-- Menu Button Icon Style -->
        <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
            <Setter Property="Width" Value="23"/>
            <Setter Property="Height" Value="23"/>
            <Setter Property="Margin" Value="0 0 20 0"/>
        </Style>

        <!-- Menu Button Text Style -->
        <Style x:Key="menuButtonText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Top Menu Button Style -->
        <Style x:Key="topMenuButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#8294cc"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Margin" Value="5 0"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#8294cc"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="20" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2b3a7a"/>
                    <Setter Property="Foreground" Value="#ccd7ff"/>
                    <Setter Property="BorderBrush" Value="#ccd7ff"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Close Button Style -->
        <Style x:Key="closeButton" TargetType="Button" BasedOn="{StaticResource topMenuButton}">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Margin" Value="0 0 0 10"/>
        </Style>

        <!-- Title Style -->
        <Style x:Key="titleIcon" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="#8294cc"/>
            <Setter Property="Width" Value="15"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="Margin" Value="0 0 10 0"/>
        </Style>

        <Style x:Key="titleText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#ccd7ff"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Square Button Style -->
        <Style x:Key="squareButton" TargetType="Button">
            <Setter Property="Background" Value="#5b60c4"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Margin" Value="10 0 0 0"/>         
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#8294cc"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="#000000" Opacity="0.3" BlurRadius="5" ShadowDepth="2"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                CornerRadius="6">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5 0 5 0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#6f74d8"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#000000" Opacity="0.5" BlurRadius="8" ShadowDepth="3"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Dialog Button Style (OK/Cancel) -->
        <Style x:Key="dialogButton" TargetType="Button" BasedOn="{StaticResource squareButton}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0 0 10 0"/>
        </Style>

        <!-- DataGrid -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#2c386c"/>
            <Setter Property="Foreground" Value="#ccd7ff"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="40"/>
        </Style>

        <Style TargetType="DataGridRow" x:Key="RowStyleWithWrittenOff">
            <Setter Property="Background" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#2c386c"/>
                </Trigger>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#8294cc"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsWrittenOff}" Value="True">
                    <Setter Property="Background" Value="#442c4f"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsWrittenOff}" Value="True"/>
                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="#442c4f"/>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="DataGridTextCellStyleCenter" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#ccd7ff"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5 5"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsWrittenOff}" Value="True">
                    <Setter Property="Foreground" Value="#f3b7ff"/>
                    <!-- Новий колір для списаного тексту -->
                    <Setter Property="FontWeight" Value="Bold"/>
                    <!-- Жирний шрифт -->
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="DataGridTextCellStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#ccd7ff"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5 5"/>          
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsWrittenOff}" Value="True">
                    <Setter Property="Foreground" Value="#f3b7ff"/>
                    <!-- Новий колір для списаного тексту -->
                    <Setter Property="FontWeight" Value="Bold"/>
                    <!-- Жирний шрифт -->
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#8294cc"/>
                    <Setter Property="Foreground" Value="#ffffff"/>
                </Trigger>
                <DataTrigger Binding="{Binding IsWrittenOff}" Value="True">
                    <Setter Property="Foreground" Value="#dfb5ff"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="dataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="RowBackground" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#46558a"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="VerticalGridLinesBrush" Value="#46558a"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#46558a"/>
        </Style>

        <!-- ScrollBar Colors -->
        <SolidColorBrush x:Key="FluentThumbBackground" Color="#152457"/>
        <SolidColorBrush x:Key="FluentThumbHover" Color="#1e377e"/>
        <SolidColorBrush x:Key="FluentThumbActive" Color="#264ba0"/>

        <!-- Fluent Thumb -->
        <Style TargetType="Thumb" x:Key="FluentThumb">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border x:Name="thumbBorder"
                                Background="{DynamicResource FluentThumbBackground}"
                                CornerRadius="2"
                                Width="Auto"
                                Height="Auto"/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="{DynamicResource FluentThumbHover}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="True">
                                <Setter TargetName="thumbBorder" Property="Background" Value="{DynamicResource FluentThumbActive}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ScrollBar Style -->
        <Style TargetType="ScrollBar">
            <Setter Property="Opacity" Value="0"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid x:Name="RootGrid"
                              Background="{TemplateBinding Background}">
                            <Track Name="PART_Track"
                                   Value="{TemplateBinding Value}"
                                   Maximum="{TemplateBinding Maximum}"
                                   Minimum="{TemplateBinding Minimum}"
                                   ViewportSize="{TemplateBinding ViewportSize}"
                                   Orientation="{TemplateBinding Orientation}">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Style="{x:Null}" IsTabStop="False" Background="Transparent"/>
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource FluentThumb}"/>
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Style="{x:Null}" IsTabStop="False" Background="Transparent"/>
                                </Track.IncreaseRepeatButton>
                            </Track>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="1" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                             To="0" Duration="0:0:0.3" BeginTime="0:0:1"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="8"/>
                </Trigger>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Height" Value="8"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- TextBox Style -->
        <Style x:Key="inputTextBox" TargetType="TextBox">
            <Setter Property="Background" Value="#2c386c"/>
            <Setter Property="Foreground" Value="#ccd7ff"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="BorderBrush" Value="#8294cc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Width" Value="400"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="2"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#ccd7ff"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#ccd7ff"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#000000" Opacity="0.3" BlurRadius="5" ShadowDepth="0"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- ComboBox Style -->
        <Style x:Key="inputComboBox" TargetType="ComboBox">
            <Setter Property="Background" Value="#2c386c"/>
            <Setter Property="Foreground" Value="#ccd7ff"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="BorderBrush" Value="#8294cc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Width" Value="200"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <Grid>
                                <ToggleButton x:Name="ToggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="0"/>
                                <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" 
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Margin="5,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Margin="3,3,23,3" IsReadOnly="True" Visibility="Hidden"/>
                                <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True">
                                    <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="#2c386c" BorderThickness="1" BorderBrush="#8294cc" CornerRadius="6"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="#ccd7ff"/>
                </Trigger>
                <Trigger Property="IsFocused" Value="True">
                    <Setter Property="BorderBrush" Value="#ccd7ff"/>
                    <Setter Property="Effect">
                        <Setter.Value>
                            <DropShadowEffect Color="#000000" Opacity="0.3" BlurRadius="5" ShadowDepth="0"/>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Date ComboBox Style -->
        <Style x:Key="dateComboBox" TargetType="ComboBox" BasedOn="{StaticResource inputComboBox}">
            <Setter Property="Width" Value="100"/>
            <Setter Property="Margin" Value="0 0 10 0"/>
        </Style>



        <!-- Стиль для Input Label TextBlock -->
        <Style x:Key="inputLabelText" TargetType="TextBlock" BasedOn="{StaticResource titleText}">
            <Setter Property="Width" Value="160"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Стиль для Адреси  -->
        <Style x:Key="inputLabelTextAdress" TargetType="TextBlock" BasedOn="{StaticResource titleText}">
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Стиль для Input StackPanel -->
        <Style x:Key="inputStackPanel" TargetType="StackPanel">
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Margin" Value="0 0 0 15"/>
        </Style>

        <!-- Стиль для User Name TextBlock -->
        <Style x:Key="userNameText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#c2cfff"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Margin" Value="0 0 0 5"/>
        </Style>

        <!-- Стиль для User Role TextBlock -->
        <Style x:Key="userRoleText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#7788bf"/>
            <Setter Property="FontSize" Value="11"/>
        </Style>

        <!-- Стиль для Gradient Border -->
        <Style x:Key="gradientBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Background" Value="{StaticResource MenuGradient}"/>
        </Style>

        <!-- Стиль для Dialog Window Border -->
        <Style x:Key="dialogWindowBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Background" Value="{StaticResource WindowGradient}"/>
        </Style>

        <!-- Стиль для User Avatar Border -->
        <Style x:Key="userAvatarBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Background" Value="{StaticResource AvatarGradient}"/>
        </Style>

        <!-- Стиль для Separator -->
        <Style x:Key="menuSeparator" TargetType="Separator">
            <Setter Property="Height" Value="0.8"/>
            <Setter Property="Margin" Value="20 30"/>
            <Setter Property="Background" Value="#46558a"/>
        </Style>

        <!-- InfoCard Styles -->

        <Style x:Key="infoCardBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="15"/>
            <Setter Property="Clip">
                <Setter.Value>
                    <RectangleGeometry RadiusX="15" RadiusY="15" Rect="0,0,316,140"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="infoCardGradientBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="15"/>
        </Style>

        <Style x:Key="infoCardEllipse" TargetType="Ellipse">
            <Setter Property="Width" Value="230"/>
            <Setter Property="Height" Value="230"/>
            <Setter Property="Margin" Value="0 -120 -90 0"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>

        <Style x:Key="infoCardIcon" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="60"/>
            <Setter Property="Margin" Value="0 0 25 25"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="infoCardTextStackPanel" TargetType="StackPanel">
            <Setter Property="Margin" Value="35 0 0 20"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
        </Style>

        <Style x:Key="infoCardTitleText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#e9e9e9"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="infoCardNumberText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="28"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
        </Style>

        <Style x:Key="infoCardNumberTextSmall" TargetType="TextBlock" BasedOn="{StaticResource infoCardNumberText}">
            <Setter Property="FontSize" Value="18"/>
            <!-- Зменшено для компактності -->
        </Style>

        <!-- Orders Styles -->
        <Style x:Key="orderBorder" TargetType="Border">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Margin" Value="0 5"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#364c8f"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="orderIconBorder" TargetType="Border">
            <Setter Property="CornerRadius" Value="10"/>
            <Setter Property="Background" Value="#152457"/>
        </Style>

        <Style x:Key="orderIcon" TargetType="fa:IconImage">
            <Setter Property="Foreground" Value="#bcc6e6"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
        </Style>

        <Style x:Key="orderGrid" TargetType="Grid">
            <Setter Property="Width" Value="45"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Margin" Value="25 0 0 0"/>
        </Style>

        <Style x:Key="orderTextStackPanel" TargetType="StackPanel">
            <Setter Property="Margin" Value="10 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style x:Key="orderTitleText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#7c8dc3"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>

        <Style x:Key="orderDescText" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#7c8dc3"/>
            <Setter Property="FontSize" Value="11"/>
            <Setter Property="Margin" Value="0 3 0 0"/>
        </Style>

        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Border x:Name="CheckBoxBorder" 
                            Width="16" 
                            Height="16" 
                            BorderBrush="#8294cc" 
                            BorderThickness="1" 
                            Background="#2c386c" 
                            CornerRadius="3">
                                <Path x:Name="CheckMark" 
                              Data="M 0 5 L 3 8 L 8 0" 
                              Stroke="#ccd7ff" 
                              StrokeThickness="3" 
                              Visibility="Collapsed" 
                              VerticalAlignment="Center" 
                              HorizontalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding IsWrittenOff}" Value="True">
                                <Setter TargetName="CheckMark" Property="Stroke" Value="#f3b7ff"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#f3b7ff"/>
                            </DataTrigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#ccd7ff"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Application.Resources>
</Application>